#summary Format Detection Informations
#labels Featured

= Introduction =
Classes in jar `wazstream.jar` try to ease the detection of some widely used file formats. The main focus are documents (optionally with digital signature) and images.

These classes can tell you which is the format of the stream "on the fly", without you have to copy it to the disk for reading it twice. They're useful when you have an `InputStream` coming for instance from a Database or a content repository, you want to know the format but later you also need the whole stream for further processing.

This project is a small and easy tool.If you need more detailed format detection, and you don't care of streaming (some of these libraries requires you store File on your disk) you should check out these projects:
 
 * [http://droid.sourceforge.net/ droid]
 * [http://sourceforge.net/projects/mime-util mime-util]

= Details =

Detection of formats is easy. Here is a sample code:
{{{
InputStream istream = ... //inputStream that comes from your application
//detects all the formats known (PDF, XML, PKCS#7, RTF, XML,GIF, JPEG...)
GuessInputStream gis = new GuessInputStream(istream, new FormatEnum[] { FormatEnum.XML });
//here is the result: FormatEnum.UNKNOWN if no format is recognized 
FormatEnum detectedFormat = gis.getFormat();
//now you can't use `istream` anymore, you must use only `gis`
}}}

If you want to detect a specific format:

{{{
InputStream istream = ... //inputStream that comes from your application
//detects only xml
GuessInputStream gis = new GuessInputStream(istream, new FormatEnum[] { FormatEnum.XML });
//here is the result: FormatEnum.XML if istream is XML FormatEnum.UNKNOWN otherwise 
FormatEnum detectedFormat = gis.getFormat();
//now you can't use `istream` anymore, you must use only `gis`
}}}

= Detected formats table =

* PDF
----
To do:
 * Add a new format.
 * Implementing a Detector.
 * Implementing a Decoder.